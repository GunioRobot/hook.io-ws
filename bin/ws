#!/usr/bin/env node

var WebSocketHook = require('../lib/ws').HookSocket;

var mtgoxTest = new WebSocketHook({
  name: 'mtgox',
  url:'ws://websocket.mtgox.com/mtgox',
  debug:false
});

var mtgoxChannels = {
  channels:[
    {key:'dbf1dee9-4f2e-4a08-8cb7-748919a71b21', name:'Trades', private:'trade'},
    {key:'d5f06780-30a8-4a48-a2f8-7ed181b4a13f', name:'MtGox Tick', private: 'ticker'},
    {key:'24e67e0d-1cad-4cc0-9e7a-f8523ef460fe', name:'All Market', private:'depth'}
  ],
  lastTrade: 0,
  getChannel: function(key){
    var selected = this.channels.filter(function(c){
      if (c.key == key)
        return true;
      return false;
    });
    return selected[0];
  },
  showMsg: function(data){
    var ch = this.getChannel(data.channel);
    this['_'+ch.private](data);
  },
  _depth: function(depth){
    var vol,
        now  = new Date(),
        data = depth.depth,
        msg = '<'+now.getHours()+':'+now.getMinutes()+':'+now.getSeconds()+'> ';
    if (data.volume < 0){
      // An order has been deleted
      msg += 'Remove ';
      vol = data.volume * -1;
    } else {
      // An order has been created
      msg += 'Create ';
      vol = data.volume;
    }
    msg += data.type_str + ' ' +vol + ' @ ' + data.price;
    console.log(msg);
  },
  _trade: function(trade){
    var data = trade.trade,
        time = new Date(data.date),
        msg = '['+time.getHours()+':'+time.getMinutes()+':'+time.getSeconds()+'] ';
    if (data.trade_type == 'ask'){
      msg += 'Sell ';      
    } else if (data.trade_type == 'bid'){
      msg += 'Buy ';
    }
    msg += data.amount + ' '+data.item+ '  @  '+data.price+' '+data.price_currency;
    this.lastTrade = data.price;
    console.log(msg);
  },
  _ticker: function(tick){
    var data = tick.ticker;
    console.log('---------------------');
    console.log('   Volume: %d      ', data.vol);
    console.log(' Buy:%d - Sell:%d  ', data.buy, data.sell);
    console.log(' Max:%d - Min:%d   ', data.high, data.low);
    console.log(' Last Price: %d    ', this.lastTrade);
    console.log('---------------------')
  }
};


mtgoxTest.on('websocket::message',function(data){
  if (data.op == 'subscribe'){
    console.log('Now suscribe to: %s',mtgoxChannels.getChannel(data.channel).name);
  } else {
    mtgoxChannels.showMsg(data);
  }
});

mtgoxTest.start();
